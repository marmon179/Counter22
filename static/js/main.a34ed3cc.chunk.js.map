{"version":3,"sources":["Components/SettingCounter/SettingCounter.module.css","Components/Input/Input.module.css","Components/Counter/Counter.module.css","Components/Button/Button.module.css","Components/Scoreboard/Scoreboard.module.css","Components/Input/Inputs.tsx","Components/Button/ButtonCounter.tsx","Components/SettingCounter/SettingCounter.tsx","Components/Scoreboard/Scoreboard.tsx","Components/Counter/Counter.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Inputs","props","errorStart","maxValue","startValue","s","error","input","errorMax","type","className","value","onChange","onChangeMax","style","width","onChangeStart","ButtonCounter","button","onClick","disabled","title","SettingCounter","containerCounter","scoreboard","textScoreboardSettings","textMax","textStart","inputContainer","start","max","onChangeStartValue","onChangeMaxValue","containerButton","setButton","isError","Scoreboard","error1","count","Counter","incButton","resetButton","App","useState","setCount","setStart","setMax","setDisabled","display","setDisplay","useEffect","valueAssMax","localStorage","getItem","newValue","JSON","parse","valueAssStart","setItem","stringify","e","Number","currentTarget","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a34ed3cc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerCounter\":\"SettingCounter_containerCounter__3bOM2\",\"scoreboard\":\"SettingCounter_scoreboard__3Ccrj\",\"inputContainer\":\"SettingCounter_inputContainer__2tPNz\",\"textScoreboardSettings\":\"SettingCounter_textScoreboardSettings__JnL_2\",\"textMax\":\"SettingCounter_textMax__11hMK\",\"textStart\":\"SettingCounter_textStart__1krti\",\"containerButton\":\"SettingCounter_containerButton__2Fd_h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__MB9aD\",\"error\":\"Input_error__mS4Mf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerCounter\":\"Counter_containerCounter__2Ubgm\",\"scoreboard\":\"Counter_scoreboard__2rHTi\",\"containerButton\":\"Counter_containerButton__19YQl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3TSrQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Scoreboard_error__1WBzH\",\"textError\":\"Scoreboard_textError__2Fcbq\",\"textSet\":\"Scoreboard_textSet__3mNh3\"};","import React, {ChangeEvent} from 'react';\r\nimport s from './Input.module.css'\r\n\r\n\r\ntype InputPropsType = {\r\n    startValue: number\r\n    maxValue: number\r\n    onChangeStart: (e: ChangeEvent<HTMLInputElement>) => void\r\n    onChangeMax: (e: ChangeEvent<HTMLInputElement>) => void\r\n\r\n}\r\n\r\n\r\nexport function Inputs(props: InputPropsType) {\r\n    let errorStart = (props.maxValue < 0) || (props.startValue === props.maxValue) ? s.error : s.input\r\n    let errorMax = (props.startValue < 0) || (props.startValue >= props.maxValue) ? s.error : s.input\r\n\r\n    return (\r\n        <>\r\n            <input type='number'\r\n                   className={errorStart}\r\n                   value={props.maxValue}\r\n                   onChange={props.onChangeMax}\r\n                   style={{width: 90}}/>\r\n\r\n            <input type='number'\r\n                   className={errorMax}\r\n                   value={props.startValue}\r\n                   onChange={props.onChangeStart}\r\n                   style={{width: 90}}/>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport s from './Button.module.css';\r\n\r\ntype ButtonPropsType = {\r\n    title: string\r\n    disabled?: boolean\r\n    onClick: () => void\r\n}\r\n\r\n\r\nexport function ButtonCounter(props: ButtonPropsType) {\r\n    return (\r\n        <button\r\n            className={s.button}\r\n            onClick={props.onClick}\r\n            disabled={props.disabled}\r\n        >{props.title}</button>\r\n    )\r\n}","import React, {ChangeEvent} from 'react';\r\nimport {Inputs} from '../Input/Inputs';\r\nimport {ButtonCounter} from '../Button/ButtonCounter';\r\nimport s from './SettingCounter.module.css'\r\n\r\ntype SettingCounterPropsType = {\r\n    start: number\r\n    max: number\r\n    onChangeStartValue: (e: ChangeEvent<HTMLInputElement>) => void\r\n    onChangeMaxValue: (e: ChangeEvent<HTMLInputElement>) => void\r\n    setButton: () => void\r\n    disabled: boolean\r\n    isError: boolean\r\n}\r\n\r\nconst SettingCounter = (props: SettingCounterPropsType) => {\r\n    return (\r\n        <div className={s.containerCounter}>\r\n            <div className={s.scoreboard}>\r\n                <div className={s.textScoreboardSettings}>\r\n                    <div className={s.textMax}>Max.value:</div>\r\n                    <div className={s.textStart}>Start value:</div>\r\n                </div>\r\n                <div className={s.inputContainer}>\r\n                    <Inputs\r\n                        startValue={props.start}\r\n                        maxValue={props.max}\r\n                        onChangeStart={props.onChangeStartValue}\r\n                        onChangeMax={props.onChangeMaxValue}/>\r\n                </div>\r\n            </div>\r\n            <div className={s.containerButton}>\r\n\r\n                <ButtonCounter onClick={props.setButton} title='set' disabled={props.disabled || props.isError}/>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SettingCounter;","import React from 'react';\r\nimport s from './Scoreboard.module.css'\r\n\r\n\r\ntype ScoreboardType = {\r\n    count: number\r\n    startValue: number\r\n    maxValue: number\r\n    isError: boolean\r\n}\r\n\r\nexport const Scoreboard = (props: ScoreboardType) => {\r\n\r\n    const error1 = props.count === props.maxValue ? s.error : ''\r\n\r\n\r\n    return (\r\n        <div className={error1}>\r\n            {\r\n                props.count\r\n            }\r\n        </div>)\r\n}\r\n\r\n","import React from 'react';\r\nimport {Scoreboard} from '../Scoreboard/Scoreboard';\r\nimport {ButtonCounter} from '../Button/ButtonCounter';\r\nimport s from './Counter.module.css'\r\n\r\ntype CounterPropsType = {\r\n    count: number\r\n    start: number\r\n    max: number\r\n    disabled: boolean\r\n    isError: boolean\r\n    incButton: () => void\r\n    resetButton: () => void\r\n    setButton: () => void\r\n\r\n}\r\n\r\nconst Counter = (props: CounterPropsType) => {\r\n    return (\r\n        <div className={s.containerCounter}>\r\n            <div className={s.scoreboard}>\r\n\r\n                <Scoreboard\r\n                    count={props.count}\r\n                    startValue={props.start}\r\n                    maxValue={props.max}\r\n                    isError={props.isError}\r\n                />\r\n            </div>\r\n            <div className={s.containerButton}>\r\n                <>\r\n                    <ButtonCounter onClick={props.incButton} title='inc'\r\n                                   disabled={props.count === props.max || props.isError}/>\r\n                    <ButtonCounter onClick={props.resetButton} title='reset'/>\r\n                    <ButtonCounter onClick={props.setButton} title='set'/>\r\n                </>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Counter;","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport './App.css';\r\nimport SettingCounter from './Components/SettingCounter/SettingCounter';\r\nimport Counter from './Components/Counter/Counter';\r\n\r\nfunction App() {\r\n\r\n    const [count, setCount] = useState(0)\r\n    const [start, setStart] = useState(0)\r\n    const [max, setMax] = useState(0)\r\n    const [disabled, setDisabled] = useState(false)\r\n    const [display, setDisplay] = useState(true)\r\n\r\n\r\n    useEffect(() => {\r\n        let valueAssMax = localStorage.getItem('counterMax')\r\n        if (valueAssMax) {\r\n            let newValue = JSON.parse(valueAssMax)\r\n            setMax(newValue)\r\n        }\r\n    }, [])\r\n    useEffect(() => {\r\n        let valueAssStart = localStorage.getItem('counterStart')\r\n        if (valueAssStart) {\r\n            let newValue = JSON.parse(valueAssStart)\r\n            setStart(newValue)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('counterMax', JSON.stringify(max))\r\n    }, [max])\r\n    useEffect(() => {\r\n        localStorage.setItem('counterStart', JSON.stringify(start))\r\n    }, [start])\r\n\r\n    const isError = max < 0 || start >= max || start < 0\r\n\r\n    const onChangeStartValue = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStart(Number(e.currentTarget.value))\r\n        setDisabled(false)\r\n    }\r\n    const onChangeMaxValue = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setMax(Number(e.currentTarget.value))\r\n        setDisabled(false)\r\n    }\r\n    const incButton = () => count <= max ? setCount(count + 1) : ''\r\n\r\n    const setButtonSetting = () => {\r\n        setCount(start)\r\n        setDisabled(true)\r\n        setDisplay(true)\r\n    }\r\n    const setButtonCount = () => {\r\n        setDisplay(false)\r\n    }\r\n\r\n    const resetButton = () => setCount(start)\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            {display ? <Counter\r\n                    count={count}\r\n                    start={start}\r\n                    max={max}\r\n                    disabled={disabled}\r\n                    isError={isError}\r\n                    incButton={incButton}\r\n                    resetButton={resetButton}\r\n                    setButton={setButtonCount}/>\r\n                : <SettingCounter\r\n                    isError={isError}\r\n                    disabled={disabled}\r\n                    max={max}\r\n                    start={start}\r\n                    onChangeMaxValue={onChangeMaxValue}\r\n                    onChangeStartValue={onChangeStartValue}\r\n                    setButton={setButtonSetting}/>\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n            <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}